Nhập nội dung theo mẫu sau:
VẤN ĐỀ:
1.1 Định nghĩa
- Trong lập trình, bài toán được hiểu là một vấn đề hoặc một tình huống cần được giải quyết bằng cách sử dụng các thuật toán và ngôn ngữ lập trình. Một bài toán lập trình thường được mô tả bằng cách xác định đầu vào (input), yêu cầu ra (output) và các ràng buộc liên quan.
- Các bài toán trong lập trình có thể thuộc vào các lĩnh vực khác nhau như máy tính, khoa học dữ liệu, trí tuệ nhân tạo, trò chơi điện tử, v.v. Mỗi bài toán đều yêu cầu một phương pháp giải quyết riêng và có thể sử dụng các ngôn ngữ lập trình khác nhau tùy thuộc vào mục tiêu và yêu cầu cụ thể của bài toán.
Vd: một bài toán đơn giản có thể là tính tổng của hai số nguyên. Đầu vào của bài toán là hai số nguyên và yêu cầu ra là tổng của hai số đó. Để giải quyết bài toán này, người lập trình có thể sử dụng công thức đơn giản như sau: tổng = số1 + số2. Sau đó, người lập trình có thể sử dụng một ngôn ngữ lập trình như Python, Java hoặc C++ để triển khai mã giải trong chương trình.

1.2 Phân loại
- Có nhiều cách phân loại bài toán trong lập trình dựa trên các tiêu chí khác nhau, dưới đây là một số phân loại phổ biến:
+ Tính toán và số học: Bài toán liên quan đến tính toán và xử lý các phép tính số học, như tính tổng, hiệu, tích, thương, căn bậc hai, v.v.
+ Chuỗi và xâu ký tự: Bài toán liên quan đến xử lý các chuỗi và xâu ký tự, như tìm kiếm, sắp xếp, xóa, thay thế, v.v.
+ Cấu trúc dữ liệu: Bài toán liên quan đến sử dụng và thiết kế các cấu trúc dữ liệu, như danh sách liên kết, hàng đợi, ngăn xếp, cây, đồ thị, v.v.
+ Kiểm tra điều kiện: Bài toán liên quan đến kiểm tra điều kiện và đưa ra quyết định dựa trên kết quả của các kiểm tra, như kiểm tra số chẵn/lẻ, kiểm tra chuỗi đối xứng, kiểm tra phần tử trong một danh sách, v.v.
+ Quy hoạch động: Bài toán liên quan đến việc tìm lời giải tối ưu cho các vấn đề tối ưu hóa, như tìm đường đi ngắn nhất, phân chia tài nguyên tối ưu, tìm dãy con tăng dài nhất, v.v.
+ Cơ sở dữ liệu: Bài toán liên quan đến truy vấn và chỉnh sửa cơ sở dữ liệu, như thêm, sửa, xóa dữ liệu, truy vấn dữ liệu, tối ưu hóa cơ sở dữ liệu, v.v.
+ Khoa học dữ liệu: Bài toán liên quan đến phân tích và khai thác dữ liệu, như gom cụm, phân loại, dự đoán, phân tích thông tin, v.v.
+ Trò chơi và đồ họa: Bài toán liên quan đến phát triển trò chơi, đồ họa máy tính, về cơ bản là giải quyết các bài toán thú vị và tạo ra trải nghiệm người dùng tốt.
* Đây chỉ là một số phân loại phổ biến và không phải là toàn bộ. Các bài toán trong lập trình có thể có sự kết hợp giữa các phân loại khác nhau và có thể thuộc vào nhiều lĩnh vực khác nhau.

1.3 Các bước thực hiện
Khả năng xử lý của máy tính không ngừng nâng cao và ngày càng thông minh hơn. Tuy nhiên, máy tính không thể tự suy nghĩ, phân tích và đưa ra phương pháp để giải quyết vấn đề. Lập trình viên sẽ làm những việc đó và cài đặt các câu lệnh dựa trên ngôn ngữ lập trình để giải quyết một bài toán cụ thể. 
Các bước để giải quyết vấn đề - bài toán bằng máy tính như sau: 
	•Bước 1: Xác định vấn đề - bài toán (bước quan trọng)
	+ Xác định rõ yêu cầu bài toán, các Input, Output và mối quan hệ giữa chúng
	+ Lựa chọn thuật toán
	+ Ngôn ngữ lập trình
	•Bước 2: Lựa chọn phương pháp giải
	Cần lựa chọn phương pháp phù hợp với yêu cầu và hạ tầng máy tính tương ứng hoặc các tiêu chí cho trước như: thời gian thực hiện, chi phí lưu trữ, chi phí bộ nhớ khi thực hiện chương trình, độ chính xác...
	•Bước 3: Xây dựng thuật toán 
	Sau khi có phương pháp giải, ta cần xây dựng thuật toán cho vấn đề - bài toán.
	•Bước 4: Cài đặt chương trình
	Sử dụng ngôn ngữ lập trình đã chọn để cài đặt chương trình tương ứng theo đúng mô tả thuật toán.
	•Bước 5: Hiệu chỉnh chương trình
	Cần hiệu chỉnh lại để chương trình đúng cú pháp của ngôn ngữ lập trình, không vi phạm các ràng buộc của bài toán và không sai về ngữ nghĩa. 
	•Bước 6: Thực hiện chương trình
	+ Cho máy tính thực hiện chương trình.
	+ Phân tích và kiểm tra kết quả có đúng với lời giải.
	+ Nếu chưa đúng, cần kiểm tra lại toàn bộ các bước trên.
Người lập trình nên tuân thủ các bước trên để nâng cao kĩ năng và hạn chế được các lỗi phát sinh trong quá trình thực hiện chương trình.

THUẬT TOÁN
2.1 Khái niệm
- Thuật toán là một tập hữu hạn các bước, các phép toán cơ bản hoặc phức tạp được sắp xếp theo một trình tự nhất định để từ thông tin đầu vào của bài toán sau một tập hữu hạn các bước đó sẽ đạt được kết quả ở đầu ra như mong muốn
  - Thuật toán phải có hữu hạn các bước, nếu chạy vô hạn sẽ không cho ra kết quả 
  - Thuật toán không tạo ra để giải quyết 1 bài toán cụ thể, mà để giải quyết 1 nhóm các bài toán cụ thể cùng thuộc một dạng bài.
(Ví dụ 1): Giải bài toán tính tổng khối lượng 2 kho hang
  => Không dùng để tính cho 2 kho hàng cụ thể mà có thể dùng để tính cho 2 kho hàng bất kì 
(Ví dụ 2): Cho bài toán giải phương trình bậc nhất: ax + b = 0
  Đầu vào (input): a, b
  Đầu ra (output): Nghiệm của phương trình bậc nhất ax + b = 0;
Mô tả thuật toán: 
  -	Nếu a = 0 
    o	Nếu b = 0 thì có vô hạn nghiệm x
    o	Nếu b != 0 thì phương trình vô nghiệm
  -	Nếu a != 0
    o	Phương trình có nghiệm x = -b/a

 ===> Qua đó có thể thấy, thuật toán đưa ra 1 quy trình các bước giải quyết một lớp vấn đề nào đấy.

2.2 Tính chất
Thuật toán có một số tính chất cơ bản sau:
- Tính chính xác/đúng: Output của thuật toán phải chính xác hoàn toàn đối với yêu cầu của bài toán.
- Tính xác định/khách quan: Dù được thực hiện nhiều lần bởi nhiều máy tính khác nhau, thuật toán phải có kết quả như nhau.
- Tính hữu hạn/kết thúc: Phải đảm bảo đến một lúc nào đó thuật toán kết thúc quá trình tính toán.
- Tính tổng quát/phổ dụng: Thuật toán đòi hỏi phải có tính ứng dụng cao. Với đầu vào tương tự, thuật toán vẫn đảm bảo đưa ra kết quả đúng.
- Tính rõ ràng/hiệu quả: Các câu lệnh minh bạch và được sắp xếp theo một trình tự nhất định.
2.3 Vai trò
- Thuật toán xuất hiện và được áp dụng vào rất nhiều những khía cạnh cũng như nhiều lĩnh vực khác nhau , tiêu biểu là:
	  + Toán học : Tìm số nguyên tố, tính toán giá trị hàm số
	  + Khoa học máy tính: Phát triển các hệ thống trí tuệ nhân tạo,…
	  + Kinh doanh: Phân tích hành vi, nhu cầu khách hàng, quản lý rủi ro, tối ưu hóa quy trình sản xuất… 
-	Riêng ngành IT của chúng ta:
    + Thuật toán là nền tảng của lập trình, các chương trình đều được viết dựa trên các thuật toán (Đóng vai trò rất quan trọng trong việc tối ưu hóa hệ thống/phần mềm)
    + Học thuật toán giúp sinh viên/lập trình viên nâng cao khả năng tư duy và giải quyết vấn đề 
    + Thuật toán được sử dụng rất nhiều trong các bài phỏng vấn vị trí liên quan đến IT

===>	Từ đó ta thấy vai trò của thuật toán bao gồm:
-	Cung cấp phương pháp hiệu quả để giải quyết các vấn đề
-	Giúp tiết kiệm tài nguyên máy tính (tiết kiệm bộ nhớ, tăng hiệu quả hoạt động của máy,…)
-	Đảm bảo sự chính xác trong kết quả khi giải quyết vấn đề.

2.4 Biểu diễn

2.5 Đánh giá
